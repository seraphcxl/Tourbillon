#!/usr/bin/env node
// If your current version is 0.0.1, than just run ./DCH_Update_Podspec 0.0.2


var fs = require('fs')
var exec = require('child_process').exec

var arguments = process.argv.slice(2);

if (arguments.length < 1) {
	console.log('use it like `./DCH_Update_Podspec 0.0.2`')
	process.exit(1);
}

if (arguments[0] == '--help' || arguments[0] == '-h') {
	console.log("Can't find .podspec file!");
	process.exit(1);
}

var gVersion = arguments[0]
var gRepo = arguments.length > 1 ? arguments[1] : ''


var findSpec = function() {
	files = fs.readdirSync('.')
	var specfile = "";
	for (var i = 0; i < files.length; i++) {
		var filename = files[i]
		if (filename.substr(-7, 7).toLowerCase() == 'podspec') {
			specfile = filename;
			break;
		}
	}
	console.log('found spec file ' + specfile)
	return specfile;
}

var replaceSepcfile = function(specfile, newVersion) {
	var specContent = fs.readFileSync(specfile, {encoding: 'utf8'})
	specContent = specContent.replace(/['|"]([0-9]+\.[0-9]+\.[0-9]+)+['|"]/g, '"'+newVersion+'"')
	fs.writeFileSync(specfile, specContent)
	console.log('replaced spec file with version ' + newVersion)
}

var gitCommit = function(message) {
	exec('git commit -q -am "'+ message + '"', function(error, stdout, stderr){
		// Run commit than push
		gitCreateTag(gVersion);
	})
	console.log('committed update version message')
}

var gitCreateTag = function(tag) {
	exec('git fetch --tags && git tag ' + tag + ' && git pull origin $(git rev-parse --abbrev-ref HEAD) && git push origin $(git rev-parse --abbrev-ref HEAD) --tags -q', function(error, stdout, stderr){
		updateLocalRepo(specfile, gVersion)
	})
	console.log('created and pushed tag ' + tag)
}

var updateLocalRepo = function(specfile, version) {
	var specfileWithoutExtension = specfile.split('.')[0]
	var baseRepoDir = '$HOME/.cocoapods/repos/' + gRepo + '/Specs'
	var podDir = baseRepoDir + '/' + specfileWithoutExtension + '/' + version + '/'
	var specfilePath = podDir + specfile
	var specContent = fs.readFileSync(specfile, {encoding:'utf8'})
	console.log('updated local repo ' + version)
	exec('mkdir -p ' + podDir + ' && ' + 'cat ' + specfile + '> ' + specfilePath, function(error, stdout, stderr){
		commitLocalRepo(specfile)
	})
}

var commitLocalRepo = function(specfile) {
	var specfileWithoutExtension = specfile.split('.')[0]
	exec('cd $HOME/.cocoapods/repos/' + gRepo + ' && git add -A && git commit -q -am "[UPDATE] ' + specfileWithoutExtension + ' ('+ gVersion +')" && git pull origin master && git push origin master -q')
	console.log('publish complete!');
}


var specfile = findSpec()
if (specfile) {
	replaceSepcfile(specfile, gVersion)
	gitCommit('[AUTO COMMIT] update specfile to version ' + gVersion)
} else {
	console.log('.podspec not found')
}
